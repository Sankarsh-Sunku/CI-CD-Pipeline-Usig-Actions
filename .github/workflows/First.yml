name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Add your test steps here if needed...
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        #  the "docker/metadata-action" is used to generate metadata for the Docker image. This step defines the image name and tag based on the branch or commit hash.
        with:
          images: ghcr.io/sankarsh-sunku/ci-cd-pipeline-usig-actions
          tags: type=sha
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: Demo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
#   job2:
#     runs-on: ubuntu-latest
#     needs: [build]
#     name: Docker Compose UP
#     steps:
#       - uses: actions/checkout@v3
#       - run: | 
#              cd Demo
#              docker compose up
#              docker ps -a
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: |
           cd Demo
           mvn package
           mkdir artifacts && cp target/*.jar artifacts/
           cd artifacts && ls
    - name: Save artifact 
      uses: actions/upload-artifact@v3
      with:
        name: github-actions-artifact
        path: Demo/artifacts/*.jar
